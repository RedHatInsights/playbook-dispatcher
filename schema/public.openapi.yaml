---
openapi: 3.0.3
info:
  title: Playbook Dispatcher
  description: Playbook Dispatcher is a service for running Ansible Playbooks on hosts connected via Cloud Connector.
  version: 0.0.1
  contact:
    email: jozef@redhat.com

paths:
  /api/playbook-dispatcher/v1/runs:
    get:
      summary: List Playbook runs
      description: >
        Returns a list of Playbook runs for the given account.
        The list can be filtered using the `filter` parameter.
        The fields returned in the representation can be controller using `fields` parameter.
      operationId: api.runs.list
      parameters:
      - $ref: '#/components/parameters/RunsFilter'
      - $ref: '#/components/parameters/RunsFields'
      - $ref: '#/components/parameters/RunsSortBy'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Runs'
        '400':
          $ref: '#/components/responses/BadRequest'

  /api/playbook-dispatcher/v1/run_hosts:
    get:
      summary: List hosts involved in Playbook runs
      operationId: api.run.hosts.list
      parameters:
      - $ref: '#/components/parameters/RunHostFilter'
      - $ref: '#/components/parameters/RunHostFields'
      - $ref: '#/components/parameters/Limit'
      - $ref: '#/components/parameters/Offset'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunHosts'

        '400':
          $ref: '#/components/responses/BadRequest'

components:
  schemas:
    RunId:
      description: Unique identifier of a Playbook run
      type: string
      format: uuid

    RunRecipient:
      description: Identifier of the host to which a given Playbook is addressed
      type: string
      format: uuid

    RunTimeout:
      description: Amount of seconds after which the run is considered failed due to timeout
      type: integer
      default: 3600
      minimum: 0
      maximum: 604800

    Account:
      description: Identifier of the tenant
      type: string
      minLength: 1
      maxLength: 10

    Url:
      description: URL hosting the Playbook
      type: string
      format: url

    Labels:
      description: Additional metadata about the Playbook run. Can be used for filtering purposes.
      type: object
      additionalProperties:
        type: string
        default: {}

    RunStatus:
      description: Current status of a Playbook run
      type: string
      enum:
        - running
        - success
        - failure
        - timeout

    CreatedAt:
      description: A timestamp when the entry was created
      type: string
      format: date-time

    UpdatedAt:
      description: A timestamp when the entry was last updated
      type: string
      format: date-time

    Runs:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Run'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta

    Run:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RunId'
        account:
          $ref: '#/components/schemas/Account'
        recipient:
          $ref: '#/components/schemas/RunRecipient'
        url:
          $ref: '#/components/schemas/Url'
        labels:
          $ref: '#/components/schemas/Labels'
        timeout:
          $ref: '#/components/schemas/RunTimeout'
        status:
          $ref: '#/components/schemas/RunStatus'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'

    RunHosts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RunHost'
        meta:
          $ref: '#/components/schemas/Meta'
      required:
      - data
      - meta

    RunHost:
      type: object
      properties:
        host:
          description: Name used to identify a host within Ansible inventory
          type: string
        stdout:
          description: Output produced by running Ansible Playbook on the given host
          type: string
        status:
          $ref: '#/components/schemas/RunStatus'
        run:
          $ref: '#/components/schemas/Run'


    Meta:
      type: object
      additionalProperties: false
      description: Information about returned entities
      properties:
        count:
          type: integer
          description: number of results returned
          example: 50
      required:
      - count

    Error:
      type: object
      properties:
        message:
          type: string
      required:
      - message

    RunLabelsNullable:
      type: object
      # this property should not be nullable however it is set so as a workaround for
      # https://github.com/getkin/kin-openapi/issues/293
      nullable: true
      additionalProperties:
        type: string

    StatusNullable:
      type: string
      # this property should not be nullable however it is set so as a workaround for
      # https://github.com/getkin/kin-openapi/issues/293
      # ideally we would reuse '#/components/schemas/RunStatus' here
      nullable: true
      enum:
        - running
        - success
        - failure
        - timeout

  parameters:
    RunsFilter:
      description: Allows for filtering based on various criteria
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        type: object
        properties:
          status:
            $ref: '#/components/schemas/StatusNullable'
          recipient:
            type: string
            # this property should not be nullable however it is set so as a workaround for
            # https://github.com/getkin/kin-openapi/issues/293
            # ideally we would reuse '#/components/schemas/RunRecipient' here
            nullable: true
            format: uuid
          # See ./internal/api/middleware/labelFilters.go
          labels:
            $ref: '#/components/schemas/RunLabelsNullable'

    RunHostFilter:
      description: Allows for filtering based on various criteria
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        type: object
        properties:
          status:
            $ref: '#/components/schemas/StatusNullable'
          run:
            type: object
            nullable: true
            properties:
              id:
                type: string
                # this property should not be nullable however it is set so as a workaround for
                # https://github.com/getkin/kin-openapi/issues/293
                # ideally we would reuse '#/components/schemas/RunRecipient' here
                nullable: true
                format: uuid
              # See ./internal/api/middleware/labelFilters.go
              labels:
                $ref: '#/components/schemas/RunLabelsNullable'

    RunsFields:
      description: >
        Defines fields to be returned in the response.
      in: query
      name: fields
      required: false
      style: deepObject
      explode: true
      schema:
        type: object
        properties:
          data:
            type: array
            items:
              type: string
              enum:
                - id
                - account
                - recipient
                - url
                - labels
                - timeout
                - status
                - created_at
                - updated_at
            default:
              - id
              - account
              - recipient
              - url
              - labels
              - timeout
              - status

    RunHostFields:
      description: >
        Defines fields to be returned in the response.
      in: query
      name: fields
      required: false
      style: deepObject
      explode: true
      schema:
        type: object
        properties:
          data:
            type: array
            items:
              type: string
              enum:
                - host
                - run
                - status
                - stdout
            default:
              - host
              - status
              - run

    RunsSortBy:
      description: Sort order
      in: query
      name: sort_by
      required: false
      schema:
        type: string
        enum:
          - created_at
          - created_at:asc
          - created_at:desc

    Limit:
      description: Maximum number of results to return
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 50

    Offset:
      in: query
      name: offset
      description: Indicates the starting position of the query relative to the complete set of items that match the query
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0


  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
