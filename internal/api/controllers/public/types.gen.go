// Package public provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package public

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for RunStatus.
const (
	RunStatusCanceled RunStatus = "canceled"
	RunStatusFailure  RunStatus = "failure"
	RunStatusRunning  RunStatus = "running"
	RunStatusSuccess  RunStatus = "success"
	RunStatusTimeout  RunStatus = "timeout"
)

// Defines values for StatusNullable.
const (
	StatusNullableCanceled StatusNullable = "canceled"
	StatusNullableFailure  StatusNullable = "failure"
	StatusNullableRunning  StatusNullable = "running"
	StatusNullableSuccess  StatusNullable = "success"
	StatusNullableTimeout  StatusNullable = "timeout"
)

// Defines values for RunsSortBy.
const (
	RunsSortByCreatedAt     RunsSortBy = "created_at"
	RunsSortByCreatedAtAsc  RunsSortBy = "created_at:asc"
	RunsSortByCreatedAtDesc RunsSortBy = "created_at:desc"
)

// Defines values for ApiRunHostsListParamsFieldsData.
const (
	ApiRunHostsListParamsFieldsDataHost        ApiRunHostsListParamsFieldsData = "host"
	ApiRunHostsListParamsFieldsDataInventoryId ApiRunHostsListParamsFieldsData = "inventory_id"
	ApiRunHostsListParamsFieldsDataLinks       ApiRunHostsListParamsFieldsData = "links"
	ApiRunHostsListParamsFieldsDataRun         ApiRunHostsListParamsFieldsData = "run"
	ApiRunHostsListParamsFieldsDataStatus      ApiRunHostsListParamsFieldsData = "status"
	ApiRunHostsListParamsFieldsDataStdout      ApiRunHostsListParamsFieldsData = "stdout"
)

// Defines values for ApiRunsListParamsFieldsData.
const (
	ApiRunsListParamsFieldsDataCorrelationId ApiRunsListParamsFieldsData = "correlation_id"
	ApiRunsListParamsFieldsDataCreatedAt     ApiRunsListParamsFieldsData = "created_at"
	ApiRunsListParamsFieldsDataId            ApiRunsListParamsFieldsData = "id"
	ApiRunsListParamsFieldsDataLabels        ApiRunsListParamsFieldsData = "labels"
	ApiRunsListParamsFieldsDataName          ApiRunsListParamsFieldsData = "name"
	ApiRunsListParamsFieldsDataOrgId         ApiRunsListParamsFieldsData = "org_id"
	ApiRunsListParamsFieldsDataRecipient     ApiRunsListParamsFieldsData = "recipient"
	ApiRunsListParamsFieldsDataService       ApiRunsListParamsFieldsData = "service"
	ApiRunsListParamsFieldsDataStatus        ApiRunsListParamsFieldsData = "status"
	ApiRunsListParamsFieldsDataTimeout       ApiRunsListParamsFieldsData = "timeout"
	ApiRunsListParamsFieldsDataUpdatedAt     ApiRunsListParamsFieldsData = "updated_at"
	ApiRunsListParamsFieldsDataUrl           ApiRunsListParamsFieldsData = "url"
	ApiRunsListParamsFieldsDataWebConsoleUrl ApiRunsListParamsFieldsData = "web_console_url"
)

// Defines values for ApiRunsListParamsSortBy.
const (
	ApiRunsListParamsSortByCreatedAt     ApiRunsListParamsSortBy = "created_at"
	ApiRunsListParamsSortByCreatedAtAsc  ApiRunsListParamsSortBy = "created_at:asc"
	ApiRunsListParamsSortByCreatedAtDesc ApiRunsListParamsSortBy = "created_at:desc"
)

// Account Identifier of the tenant
type Account = string

// CreatedAt A timestamp when the entry was created
type CreatedAt = time.Time

// Error defines model for Error.
type Error struct {
	Message string `json:"message"`
}

// InventoryIdNullable defines model for InventoryIdNullable.
type InventoryIdNullable = openapi_types.UUID

// Labels Additional metadata about the Playbook run. Can be used for filtering purposes.
type Labels map[string]string

// Links defines model for Links.
type Links struct {
	// First relative link to the first page of the query results
	First string `json:"first"`

	// Last relative link to the last page of the query results
	Last string `json:"last"`

	// Next relative link to the next page of the query results
	Next *string `json:"next,omitempty"`

	// Previous relative link to the previous page of the query results
	Previous *string `json:"previous,omitempty"`
}

// Meta Information about returned entities
type Meta struct {
	// Count number of results returned
	Count int `json:"count"`

	// Total total number of results matching the query
	Total int `json:"total"`
}

// OrgId Identifier of the tenant
type OrgId = string

// PlaybookName Human readable name of the playbook run. Used to present the given playbook run in external systems (Satellite).
type PlaybookName = string

// Run defines model for Run.
type Run struct {
	// Account Identifier of the tenant
	// Deprecated:
	Account *Account `json:"account,omitempty"`

	// CorrelationId Unique identifier used to match work request with responses
	CorrelationId *RunCorrelationId `json:"correlation_id,omitempty"`

	// CreatedAt A timestamp when the entry was created
	CreatedAt *CreatedAt `json:"created_at,omitempty"`

	// Id Unique identifier of a Playbook run
	Id *RunId `json:"id,omitempty"`

	// Labels Additional metadata about the Playbook run. Can be used for filtering purposes.
	Labels *Labels `json:"labels,omitempty"`

	// Name Human readable name of the playbook run. Used to present the given playbook run in external systems (Satellite).
	Name *PlaybookName `json:"name,omitempty"`

	// OrgId Identifier of the tenant
	OrgId *OrgId `json:"org_id,omitempty"`

	// Recipient Identifier of the host to which a given Playbook is addressed
	Recipient *RunRecipient `json:"recipient,omitempty"`

	// Service Service that triggered the given Playbook run
	Service *Service `json:"service,omitempty"`

	// Status Current status of a Playbook run
	Status *RunStatus `json:"status,omitempty"`

	// Timeout Amount of seconds after which the run is considered failed due to timeout
	Timeout *RunTimeout `json:"timeout,omitempty"`

	// UpdatedAt A timestamp when the entry was last updated
	UpdatedAt *UpdatedAt `json:"updated_at,omitempty"`

	// Url URL hosting the Playbook
	Url *Url `json:"url,omitempty"`

	// WebConsoleUrl URL that points to the section of the web console where the user find more information about the playbook run. The field is optional but highly suggested.
	WebConsoleUrl *WebConsoleUrl `json:"web_console_url,omitempty"`
}

// RunCorrelationId Unique identifier used to match work request with responses
type RunCorrelationId = string

// RunHost defines model for RunHost.
type RunHost struct {
	// Host Name used to identify a host within Ansible inventory
	Host        *string             `json:"host,omitempty"`
	InventoryId *openapi_types.UUID `json:"inventory_id,omitempty"`
	Links       *RunHostLinks       `json:"links,omitempty"`
	Run         *Run                `json:"run,omitempty"`

	// Status Current status of a Playbook run
	Status *RunStatus `json:"status,omitempty"`

	// Stdout Output produced by running Ansible Playbook on the given host
	Stdout *string `json:"stdout,omitempty"`
}

// RunHostLinks defines model for RunHostLinks.
type RunHostLinks struct {
	InventoryHost *string `json:"inventory_host"`
}

// RunHosts defines model for RunHosts.
type RunHosts struct {
	Data  []RunHost `json:"data"`
	Links Links     `json:"links"`

	// Meta Information about returned entities
	Meta Meta `json:"meta"`
}

// RunId Unique identifier of a Playbook run
type RunId = openapi_types.UUID

// RunLabelsNullable defines model for RunLabelsNullable.
type RunLabelsNullable map[string]string

// RunRecipient Identifier of the host to which a given Playbook is addressed
type RunRecipient = openapi_types.UUID

// RunStatus Current status of a Playbook run
type RunStatus string

// RunTimeout Amount of seconds after which the run is considered failed due to timeout
type RunTimeout = int

// Runs defines model for Runs.
type Runs struct {
	Data  []Run `json:"data"`
	Links Links `json:"links"`

	// Meta Information about returned entities
	Meta Meta `json:"meta"`
}

// Service Service that triggered the given Playbook run
type Service = string

// ServiceNullable defines model for ServiceNullable.
type ServiceNullable = string

// StatusNullable defines model for StatusNullable.
type StatusNullable string

// UpdatedAt A timestamp when the entry was last updated
type UpdatedAt = time.Time

// Url URL hosting the Playbook
type Url = string

// WebConsoleUrl URL that points to the section of the web console where the user find more information about the playbook run. The field is optional but highly suggested.
type WebConsoleUrl = string

// Limit defines model for Limit.
type Limit = int

// Offset defines model for Offset.
type Offset = int

// RunHostFields defines model for RunHostFields.
type RunHostFields struct {
	Data *[]string `json:"data,omitempty"`
}

// RunHostFilter defines model for RunHostFilter.
type RunHostFilter struct {
	InventoryId *InventoryIdNullable `json:"inventory_id"`
	Run         *struct {
		Id      *openapi_types.UUID `json:"id"`
		Labels  *RunLabelsNullable  `json:"labels"`
		Service *ServiceNullable    `json:"service"`
	} `json:"run"`
	Status *StatusNullable `json:"status"`
}

// RunsFields defines model for RunsFields.
type RunsFields struct {
	Data *[]string `json:"data,omitempty"`
}

// RunsFilter defines model for RunsFilter.
type RunsFilter struct {
	Labels    *RunLabelsNullable  `json:"labels"`
	Recipient *openapi_types.UUID `json:"recipient"`
	Service   *ServiceNullable    `json:"service"`
	Status    *StatusNullable     `json:"status"`
}

// RunsSortBy defines model for RunsSortBy.
type RunsSortBy string

// BadRequest defines model for BadRequest.
type BadRequest = Error

// Forbidden defines model for Forbidden.
type Forbidden = Error

// ApiRunHostsListParams defines parameters for ApiRunHostsList.
type ApiRunHostsListParams struct {
	// Filter Allows for filtering based on various criteria
	Filter *RunHostFilter `json:"filter,omitempty"`

	// Fields Defines fields to be returned in the response.
	Fields *RunHostFields `json:"fields,omitempty"`

	// Limit Maximum number of results to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Indicates the starting position of the query relative to the complete set of items that match the query
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// ApiRunHostsListParamsFieldsData defines parameters for ApiRunHostsList.
type ApiRunHostsListParamsFieldsData string

// ApiRunsListParams defines parameters for ApiRunsList.
type ApiRunsListParams struct {
	// Filter Allows for filtering based on various criteria
	Filter *RunsFilter `json:"filter,omitempty"`

	// Fields Defines fields to be returned in the response.
	Fields *RunsFields `json:"fields,omitempty"`

	// SortBy Sort order
	SortBy *ApiRunsListParamsSortBy `form:"sort_by,omitempty" json:"sort_by,omitempty"`

	// Limit Maximum number of results to return
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Indicates the starting position of the query relative to the complete set of items that match the query
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// ApiRunsListParamsFieldsData defines parameters for ApiRunsList.
type ApiRunsListParamsFieldsData string

// ApiRunsListParamsSortBy defines parameters for ApiRunsList.
type ApiRunsListParamsSortBy string
