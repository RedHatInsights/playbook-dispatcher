apiVersion: v1
kind: Template
metadata:
  name: playbook-dispatcher
objects:
- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: playbook-dispatcher
  spec:
    envName: ${ENV_NAME}

    database:
      name: playbook-dispatcher
      version: 12

    kafkaTopics:
    - replicas: 3
      partitions: 16
      topicName: platform.playbook-dispatcher.runner-updates
    - replicas: 3
      partitions: 16
      topicName: platform.upload.playbook
    - replicas: 3
      partitions: 16
      topicName: platform.upload.validation

    deployments:
    - name: api
      minReplicas: ${{REPLICAS_API}}
      web: true
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run
        - -m
        - api
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: CLOWDER_ENABLED
            value: "true"
          - name: DB_SSLMODE
            value: ${DB_SSLMODE}

          - name: CLOUD_CONNECTOR_IMPL
            value: ${CLOUD_CONNECTOR_IMPL}
          - name: CLOUD_CONNECTOR_HOST
            value: ${CLOUD_CONNECTOR_HOST}
          - name: CLOUD_CONNECTOR_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: id
                name: client-psk-cloud-connector
          - name: CLOUD_CONNECTOR_PSK
            valueFrom:
              secretKeyRef:
                key: key
                name: client-psk-cloud-connector
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: 250m
            memory: 256Mi

    - name: response-consumer
      minReplicas: ${{REPLICAS_RESPONSE_CONSUMER}}
      web: false
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run
        - -m
        - response-consumer
        initContainers:
        - args:
          - migrate
          - up
          inheritEnv: true
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: CLOWDER_ENABLED
            value: "true"
          - name: DB_SSLMODE
            value: ${DB_SSLMODE}
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: 250m
            memory: 256Mi

    - name: validator
      minReplicas: ${{REPLICAS_VALIDATOR}}
      web: false
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run
        - -m
        - validator
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: CLOWDER_ENABLED
            value: "true"
          - name: DB_SSLMODE
            value: ${DB_SSLMODE}
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: 250m
            memory: 256Mi


parameters:
- name: IMAGE_TAG
  required: true
- name: IMAGE
  value: quay.io/cloudservices/playbook-dispatcher
- description : ClowdEnvironment name
  name: ENV_NAME
  required: true

- name: LOG_LEVEL
  value: INFO
- name: CPU_LIMIT
  value: 500m
- name: MEMORY_LIMIT
  value: 512Mi

- name: REPLICAS_API
  value: "2"
- name: REPLICAS_RESPONSE_CONSUMER
  value: "2"
- name: REPLICAS_VALIDATOR
  value: "2"

- name: DB_SSLMODE
  value: verify-full

- name: CLOUD_CONNECTOR_IMPL
  value: mock
- name: CLOUD_CONNECTOR_HOST
  value: mock
