apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: playbook-dispatcher
objects:
# The below secrets are used for testing in ephemeral environments only.
- apiVersion: v1
  kind: Secret
  metadata:
    name: auth-psk-remediations
  stringData:
    key: ${KEY_REMEDIATIONS}
- apiVersion: v1
  kind: Secret
  metadata:
    name: auth-psk-config-manager
  stringData:
    key: ${KEY_CONFIG_MANAGER}
- apiVersion: v1
  kind: Secret
  metadata:
    name: client-psk-cloud-connector
  stringData:
    client-id: ${ID_CLOUD_CONNECTOR}
    client-psk: ${KEY_CLOUD_CONNECTOR}

- apiVersion: cloud.redhat.com/v1alpha1
  kind: ClowdApp
  metadata:
    name: playbook-dispatcher
  spec:
    dependencies:
      - rbac
    optionalDependencies:
      - ingress

    envName: ${ENV_NAME}

    testing:
      iqePlugin: playbook-dispatcher

    database:
      name: playbook-dispatcher
      version: 12

    kafkaTopics:
    - replicas: 3
      partitions: 16
      topicName: platform.playbook-dispatcher.runner-updates
    - replicas: 3
      partitions: 16
      topicName: platform.upload.announce
    - replicas: 3
      partitions: 16
      topicName: platform.upload.validation

    deployments:
    - name: api
      minReplicas: ${{REPLICAS_API}}
      webServices:
        public:
          enabled: true
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run
        - -m
        - api
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: DB_SSLMODE
            value: ${DB_SSLMODE}

          - name: PSK_AUTH_REMEDIATIONS
            valueFrom:
              secretKeyRef:
                key: key
                name: auth-psk-remediations
          - name: PSK_AUTH_CONFIG_MANAGER
            valueFrom:
              secretKeyRef:
                key: key
                name: auth-psk-config-manager
          - name: PSK_AUTH_EDGE
            valueFrom:
              secretKeyRef:
                key: key
                name: auth-psk-edge
                optional: true
          - name: PSK_AUTH_TASKS
            valueFrom:
              secretKeyRef:
                key: key
                name: auth-psk-tasks
                optional: true
          - name: PSK_AUTH_TEST
            value: ${PSK_AUTH_TEST}

          - name: CLOUD_CONNECTOR_IMPL
            value: ${CLOUD_CONNECTOR_IMPL}
          - name: CLOUD_CONNECTOR_HOST
            value: ${CLOUD_CONNECTOR_HOST}
          - name: CLOUD_CONNECTOR_PORT
            value: ${CLOUD_CONNECTOR_PORT}
          - name: CLOUD_CONNECTOR_RPS
            value: ${CLOUD_CONNECTOR_RPS}
          - name: CLOUD_CONNECTOR_REQ_BUCKET
            value: ${CLOUD_CONNECTOR_REQ_BUCKET}
          - name: CLOUD_CONNECTOR_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: client-id
                name: client-psk-cloud-connector
          - name: CLOUD_CONNECTOR_PSK
            valueFrom:
              secretKeyRef:
                key: client-psk
                name: client-psk-cloud-connector
          - name: RESPONSE_INTERVAL
            value: ${RESPONSE_INTERVAL}

          - name: RETURN_URL
            value: ${RETURN_URL}
          - name: WEB_CONSOLE_URL_DEFAULT
            value: ${WEB_CONSOLE_URL_DEFAULT}

          - name: RBAC_IMPL
            value: ${RBAC_IMPL}
          - name: RBAC_HOST
            value: ${RBAC_HOST}

          - name: TENANT_TRANSLATOR_IMPL
            value: ${TENANT_TRANSLATOR_IMPL}
          - name: TENANT_TRANSLATOR_HOST
            value: ${TENANT_TRANSLATOR_HOST}
          - name: TENANT_TRANSLATOR_PORT
            value: ${TENANT_TRANSLATOR_PORT}

          - name: INVENTORY_CONNECTOR_IMPL
            value: ${INVENTORY_CONNECTOR_IMPL}
          - name: INVENTORY_CONNECTOR_SCHEME
            value: ${INVENTORY_CONNECTOR_SCHEME}
          - name: INVENTORY_CONNECTOR_HOST
            value: ${INVENTORY_CONNECTOR_HOST}
          - name: INVENTORY_CONNECTOR_PORT
            value: ${INVENTORY_CONNECTOR_PORT}

          - name: SOURCES_IMPL
            value: ${SOURCES_CONNECTOR_IMPL}
          - name: SOURCES_SCHEME
            value: ${SOURCES_CONNECTOR_SCHEME}
          - name: SOURCES_HOST
            value: ${SOURCES_CONNECTOR_HOST}
          - name: SOURCES_PORT
            value: ${SOURCES_CONNECTOR_PORT}

          - name: BLOCKLIST_ORG_IDS
            value: ${BLOCKLIST_ORG_IDS}

        resources:
          limits:
            cpu: ${API_CPU_LIMIT}
            memory: ${API_MEMORY_LIMIT}
          requests:
            cpu: ${API_CPU_REQUEST}
            memory: ${API_MEMORY_REQUEST}

    - name: response-consumer
      minReplicas: ${{REPLICAS_RESPONSE_CONSUMER}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run
        - -m
        - response-consumer
        initContainers:
        - args:
          - migrate
          - up
          inheritEnv: true
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: DB_SSLMODE
            value: ${DB_SSLMODE}
        resources:
          limits:
            cpu: ${RESPONSE_CONSUMER_CPU_LIMIT}
            memory: ${RESPONSE_CONSUMER_MEMORY_LIMIT}
          requests:
            cpu: ${RESPONSE_CONSUMER_CPU_REQUEST}
            memory: ${RESPONSE_CONSUMER_MEMORY_REQUEST}

    - name: validator
      minReplicas: ${{REPLICAS_VALIDATOR}}
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - run
        - -m
        - validator
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        env:
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: DB_SSLMODE
            value: ${DB_SSLMODE}
          - name: STORAGE_MAX_CONCURRENCY
            value: ${STORAGE_MAX_CONCURRENCY}
          - name: ARTIFACT_MAX_SIZE
            value: ${ARTIFACT_MAX_SIZE}
          - name: BLOCKLIST_ORG_IDS
            value: ${BLOCKLIST_ORG_IDS}
        resources:
          limits:
            cpu: ${VALIDATOR_CPU_LIMIT}
            memory: ${VALIDATOR_MEMORY_LIMIT}
          requests:
            cpu: ${VALIDATOR_CPU_REQUEST}
            memory: ${VALIDATOR_MEMORY_REQUEST}

    jobs:
    - name: cleaner
      schedule: ${CLEANER_SCHEDULE}
      restartPolicy: OnFailure
      concurrencyPolicy: Replace
      podSpec:
        image: ${IMAGE}:${IMAGE_TAG}
        args:
        - clean
        env:
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: DB_SSLMODE
          value: ${DB_SSLMODE}
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi

parameters:
- name: IMAGE_TAG
  required: true
- name: IMAGE
  value: quay.io/cloudservices/playbook-dispatcher
- description : ClowdEnvironment name
  name: ENV_NAME
  required: true

- name: LOG_LEVEL
  value: INFO
- name: API_CPU_LIMIT
  value: 500m
- name: API_CPU_REQUEST
  value: 250m
- name: API_MEMORY_LIMIT
  value: 512Mi
- name: API_MEMORY_REQUEST
  value: 256Mi
- name: RESPONSE_CONSUMER_CPU_LIMIT
  value: 500m
- name: RESPONSE_CONSUMER_CPU_REQUEST
  value: 250m
- name: RESPONSE_CONSUMER_MEMORY_LIMIT
  value: 512Mi
- name: RESPONSE_CONSUMER_MEMORY_REQUEST
  value: 256Mi
- name: VALIDATOR_CPU_LIMIT
  value: 500m
- name: VALIDATOR_CPU_REQUEST
  value: 250m
- name: VALIDATOR_MEMORY_LIMIT
  value: 512Mi
- name: VALIDATOR_MEMORY_REQUEST
  value: 256Mi

- name: REPLICAS_API
  value: "3"
- name: REPLICAS_RESPONSE_CONSUMER
  value: "3"
- name: REPLICAS_VALIDATOR
  value: "3"

- name: DB_SSLMODE
  value: verify-full

- name: CLOUD_CONNECTOR_IMPL
  value: impl
- name: CLOUD_CONNECTOR_HOST
  required: true
- name: CLOUD_CONNECTOR_PORT
  value: '8080'
- name: CLOUD_CONNECTOR_RPS
  value: "100"
- name: CLOUD_CONNECTOR_REQ_BUCKET
  value: "60"
- name: RESPONSE_INTERVAL
  value: "30"

- name: RBAC_IMPL
  value: impl
- name: RBAC_HOST
  required: true

- name: STORAGE_MAX_CONCURRENCY
  value: "5"
- name: ARTIFACT_MAX_SIZE
  value: '3145728'

- name: RETURN_URL
  value: TBD
- name: WEB_CONSOLE_URL_DEFAULT
  value: https://console.redhat.com

- name: CLEANER_SCHEDULE
  value: "*/10 * * * *"

- name: TENANT_TRANSLATOR_HOST
  required: true
- name: TENANT_TRANSLATOR_PORT
  value: '8892'
- name: TENANT_TRANSLATOR_IMPL
  value: impl

- name: INVENTORY_CONNECTOR_IMPL
  value: impl
- name: INVENTORY_CONNECTOR_SCHEME
  value: http
- name: INVENTORY_CONNECTOR_HOST
  required: true
- name: INVENTORY_CONNECTOR_PORT
  value: '8080'

- name: SOURCES_CONNECTOR_IMPL
  value: impl
- name: SOURCES_CONNECTOR_SCHEME
  value: http
- name: SOURCES_CONNECTOR_HOST
  required: true
- name: SOURCES_CONNECTOR_PORT
  value: '8080'

- name: BLOCKLIST_ORG_IDS
  value: ""

# Used for testing in ephemeral environments only.
- name: PSK_AUTH_TEST
  value: ""  # If a value is not provided the principal is ignored.
- name: KEY_REMEDIATIONS
  value: PuqrzbBNxz
- name: KEY_CONFIG_MANAGER
  value: FLYdxYZGpq
- name: ID_CLOUD_CONNECTOR
  value: playbook-dispatcher
- name: KEY_CLOUD_CONNECTOR
  value: cloud_connector
